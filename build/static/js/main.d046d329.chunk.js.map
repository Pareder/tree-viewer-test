{"version":3,"sources":["helpers/index.js","components/LeftTree.js","styles/index.js","components/RightTree.js","config/index.js","components/DiffViewer.js","App.js","serviceWorker.js","index.js"],"names":["trimString","str","phrase","includes","split","LeftTree","_this","this","_this$props","props","left","right","active","react_default","a","createElement","Card","fluid","Content","Header","info","id","Description","Date","endTimestamp","toUTCString","extra","Accordion","exclusive","styled","Object","keys","nodes","map","node","idx","Fragment","key","Title","onClick","handleClick","Icon","name","length","subnode","subidx","concat","grandnode","grandidx","elements","grandnodeRight","find","item","changes","change","changeIdx","old","React","Component","classes","root","padding","absent","color","modified","new","unchanged","RightTree","style","status","config","jsonData","EXAMPLE.COM_192.168.0.1","storage","interfaces","Cisco3745new-1.SAMPLE.COM_192.168.0.120","Cisco3640new-1.SAMPLE.COM_192.168.0.180","physAddress","Huawei1421_192.168.0.120","DiffViewer","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","event","newActive","state","setState","oldState","objectSpread","_this$state","Grid","columns","centered","Row","Column","width","components_LeftTree","components_RightTree","App","className","Container","components_DiffViewer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d046d329.chunk.js","sourcesContent":["const trimString = (str) => {\n  let phrase = '';\n  if (str.includes('storages')) {\n    phrase = 'storages-';\n  } else if (str.includes('interfaces')) {\n    phrase = 'interfaces-';\n  }\n  if (phrase) {\n    return str.split(phrase)[1];\n  } else {\n    return str;\n  }\n}\n\nexport { trimString };","import React from 'react';\nimport { Card, Accordion, Icon } from 'semantic-ui-react';\nimport { trimString } from '../helpers';\n\nclass LeftTree extends React.Component {\n  render() {\n  \tconst { left, right, active } = this.props;\n\n    return (\n      <Card fluid>\n        <Card.Content>\n          <Card.Header>{left.info.id}</Card.Header>\n          <Card.Description>{new Date(left.info.endTimestamp).toUTCString()}</Card.Description>\n        </Card.Content>\n        <Card.Content extra>\n          <Accordion exclusive={false} styled={true}>\n            {Object.keys(left.nodes).map((node, idx) => (\n              <React.Fragment key={idx}>\n                <Accordion.Title active={active[node] && active[node].active} onClick={this.props.handleClick(node)}>\n                  <Icon name='dropdown' />\n                  {node}\n                </Accordion.Title>\n                <Accordion.Content active={active[node] && active[node].active}>\n                  {Object.keys(left.nodes[node]).length > 0 && (\n                    <Accordion.Accordion exclusive={false}>\n                      {Object.keys(left.nodes[node]).map((subnode, subidx) => (\n                        <React.Fragment key={`${idx}_${subidx}`}>\n                         <Accordion.Title active={active[node] && active[node][subnode] && active[node][subnode].active} onClick={this.props.handleClick(node, subnode)}>\n                            <Icon name='dropdown' />\n                            {subnode}\n                          </Accordion.Title>\n                          <Accordion.Content active={active[node] && active[node][subnode] && active[node][subnode].active}>\n                            {left.nodes[node][subnode] && left.nodes[node][subnode].length > 0 && (\n                              <Accordion.Accordion exclusive={false}>\n                                {left.nodes[node][subnode].map((grandnode, grandidx) => {\n                                  if (right.nodes[node] && right.nodes[node][subnode] && right.nodes[node][subnode].elements) {\n                                    const grandnodeRight = right.nodes[node][subnode].elements.find(item => item.name === grandnode);\n                                    if (grandnodeRight && grandnodeRight.changes) {\n                                      return (\n                                        <React.Fragment key={`${idx}_${subidx}_${grandidx}`}>\n                                          <Accordion.Title active={active[node] && active[node][subnode] && active[node][subnode][grandnode] && active[node][subnode][grandnode].active} onClick={this.props.handleClick(node, subnode, grandnode)}>\n                                            <Icon name='dropdown' />\n                                            <span>{trimString(grandnode)}</span>\n                                          </Accordion.Title>\n                                          <Accordion.Content active={active[node] && active[node][subnode] && active[node][subnode][grandnode] && active[node][subnode][grandnode].active}>\n                                            <Accordion.Accordion>\n                                              {Object.keys(grandnodeRight.changes).map((change, changeIdx) => (\n                                                <Accordion.Title key={`${idx}_${subidx}_${grandidx}_${changeIdx}`}>\n                                                  {change}: {grandnodeRight.changes[change].old}\n                                                </Accordion.Title>\n                                              ))}\n                                            </Accordion.Accordion>\n                                          </Accordion.Content>\n                                        </React.Fragment>\n                                      )\n                                    }\n                                  }\n                                  return (\n                                    <Accordion.Title key={`${idx}_${subidx}_${grandidx}`}>\n                                      <Icon name='file' />\n                                      <span>{trimString(grandnode)}</span>\n                                    </Accordion.Title>\n                                  )\n                                })}\n                              </Accordion.Accordion>\n                            )}\n                          </Accordion.Content>\n                        </React.Fragment>\n                      ))}\n                    </Accordion.Accordion>\n                  )}\n                </Accordion.Content>\n              </React.Fragment>\n            ))}\n          </Accordion>\n        </Card.Content>\n      </Card>\n    );\n  }\n}\n\nexport default LeftTree;","const classes = {\n  root: {\n    padding: '24px'\n  },\n  absent: {\n    color: 'red'\n  },\n  modified: {\n    color: 'yellow'\n  },\n  new: {\n    color: 'green'\n  },\n  unchanged: {\n    color: 'black'\n  }\n}\n\nexport default classes;","import React from 'react';\nimport { Card, Accordion, Icon } from 'semantic-ui-react';\nimport classes from '../styles';\nimport { trimString } from '../helpers';\n\nclass RightTree extends React.Component {\n\trender() {\n\t\tconst { right, active } = this.props;\n\n\t\treturn (\n\t\t\t<Card fluid>\n        <Card.Content>\n          <Card.Header>{right.info.id}</Card.Header>\n          <Card.Description>{new Date(right.info.endTimestamp).toUTCString()}</Card.Description>\n        </Card.Content>\n        <Card.Content extra>\n          <Accordion exclusive={false} styled={true}>\n            {Object.keys(right.nodes).map((node, idx) => (\n              <React.Fragment key={idx}>\n                <Accordion.Title active={active[node] && active[node].active} onClick={this.props.handleClick(node)}>\n                  <Icon name='dropdown' />\n                \t<span style={classes[right.nodes[node].status]}>{node}</span>\n                </Accordion.Title>\n                <Accordion.Content active={active[node] && active[node].active}>\n                  {Object.keys(right.nodes[node]).length > 1 && (\n                \t\t<Accordion.Accordion>\n                      {Object.keys(right.nodes[node]).map((subnode, subidx) => subnode !== 'status' && (\n                        <React.Fragment key={`${idx}_${subidx}`}>\n                          <Accordion.Title active={active[node] && active[node][subnode] && active[node][subnode].active} onClick={this.props.handleClick(node, subnode)}>\n                            <Icon name='dropdown' />\n                            <span style={classes[right.nodes[node][subnode].status]}>{subnode}</span>\n                          </Accordion.Title>\n                          <Accordion.Content active={active[node] && active[node][subnode] && active[node][subnode].active}>\n                            {right.nodes[node][subnode].elements && right.nodes[node][subnode].elements.length > 0 && (\n                              <Accordion.Accordion>\n                                {right.nodes[node][subnode].elements.map((grandnode, grandidx) => (\n                                  grandnode.changes\n                                  ? <React.Fragment key={`${idx}_${subidx}_${grandidx}`}>\n                                    <Accordion.Title active={active[node] && active[node][subnode] && active[node][subnode][grandnode.name] && active[node][subnode][grandnode.name].active} onClick={this.props.handleClick(node, subnode, grandnode)}>\n                                      <Icon name='dropdown' />\n                                      <span style={classes[grandnode.status]}>{trimString(grandnode.name)}</span>\n                                    </Accordion.Title>\n                                    <Accordion.Content active={active[node] && active[node][subnode] && active[node][subnode][grandnode.name] && active[node][subnode][grandnode.name].active}>\n                                      <Accordion.Accordion>\n                                        {Object.keys(grandnode.changes).map((change, changeIdx) => (\n                                          <Accordion.Title key={`${idx}_${subidx}_${grandidx}_${changeIdx}`}>\n                                            {change}: {grandnode.changes[change].new}\n                                          </Accordion.Title>\n                                        ))}\n                                      </Accordion.Accordion>\n                                    </Accordion.Content>\n                                  </React.Fragment>\n                                  : <Accordion.Title key={`${idx}_${subidx}_${grandidx}`}>\n                                    <Icon name='file' />\n                                    <span style={classes[grandnode.status]}>{trimString(grandnode.name)}</span>\n                                  </Accordion.Title>\n                                ))}\n                              </Accordion.Accordion>\n                            )}\n                          </Accordion.Content>\n                        </React.Fragment>\n                      ))}\n                  \t</Accordion.Accordion>\n                  )}\n                </Accordion.Content>\n              </React.Fragment>\n            ))}\n          </Accordion>\n        </Card.Content>\n      </Card>\n\t\t);\n\t}\n}\n\nexport default RightTree;","const config = {\n  jsonData: {\n   \"left\": {\n     \"nodes\": {\n       \"EXAMPLE.COM_192.168.0.1\": {\n         \"storage\": [\n         \"EXAMPLE.COM_192.168.0.1-storages-12\",\n         \"EXAMPLE.COM_192.168.0.1-storages-37\",\n         \"EXAMPLE.COM_192.168.0.1-storages-41\"\n         ],\n         \"interfaces\": [\n         \"EXAMPLE.COM_192.168.0.1-snmp-interfaces-eth0\",\n         \"EXAMPLE.COM_192.168.0.1-snmp-interfaces-eth1\",\n         \"EXAMPLE.COM_192.168.0.1-snmp-interfaces-br.lxc-4\"\n         ]\n       },\n       \"Cisco3745new-1.SAMPLE.COM_192.168.0.120\": {\n         \"interfaces\": [\n         \"Cisco3745new-1.SAMPLE.COM_192.168.0.120-snmp-interfaces-eth0\",\n         \"Cisco3745new-1.SAMPLE.COM_192.168.0.120-snmp-interfaces-eth1\",\n         \"Cisco3745new-1.SAMPLE.COM_192.168.0.120-snmp-interfaces-eth2\"\n         ]\n       },\n       \"Cisco3640new-1.SAMPLE.COM_192.168.0.180\": {\n         \"interfaces\": [\n         \"Cisco3640new-1.SAMPLE.COM_192.168.0.180-snmp-interfaces-eth0\",\n         \"Cisco3640new-1.SAMPLE.COM_192.168.0.180-snmp-interfaces-eth1\",\n         \"Cisco3640new-1.SAMPLE.COM_192.168.0.180-snmp-interfaces-eth2\",\n         \"Cisco3640new-1.SAMPLE.COM_192.168.0.180-snmp-interfaces-eth3\"\n         ]\n       }\n     },\n     \"info\": {\n       \"id\": \"Dailysync0d464eb75582c5da0f7b3285d460557dd3d2843a\",\n       \"endTimestamp\": 1534685151333\n     }\n   },\n   \"right\": {\n     \"nodes\": {\n       \"EXAMPLE.COM_192.168.0.1\": {\n         \"status\": \"modified\",\n         \"storage\": {\n           \"status\": \"modified\",\n           \"elements\": [\n           {\n             \"name\": \"EXAMPLE.COM_192.168.0.1-storages-12\",\n             \"status\": \"unchanged\"\n           },\n           {\n             \"name\": \"EXAMPLE.COM_192.168.0.1-storages-37\",\n             \"status\": \"absent\"\n           },\n           {\n             \"name\": \"EXAMPLE.COM_192.168.0.1-storages-38\",\n             \"status\": \"new\"\n           },\n           {\n             \"name\": \"EXAMPLE.COM_192.168.0.1-storages-41\",\n             \"status\": \"absent\"\n           },\n           {\n             \"name\": \"EXAMPLE.COM_192.168.0.1-storages-54\",\n             \"status\": \"new\"\n           },\n           {\n             \"name\": \"EXAMPLE.COM_192.168.0.1-storages-55\",\n             \"status\": \"new\"\n           },\n           {\n             \"name\": \"EXAMPLE.COM_192.168.0.1-storages-56\",\n             \"status\": \"new\"\n           }\n           ]\n         },\n         \"interfaces\": {\n           \"status\": \"modified\",\n           \"elements\": [\n           {\n             \"name\": \"EXAMPLE.COM_192.168.0.1-snmp-interfaces-br.lxc-4\",\n             \"status\": \"modified\",\n             \"changes\": {\n               \"physAddress\": {\n                 \"old\": \"6acbee9c82da\",\n                 \"new\": \"6acbee9b75fd\"\n               }\n             }\n           },\n           {\n             \"name\": \"EXAMPLE.COM_192.168.0.1-snmp-interfaces-eth0\",\n             \"status\": \"unchanged\"\n           },\n           {\n             \"name\": \"EXAMPLE.COM_192.168.0.1-snmp-interfaces-eth1\",\n             \"status\": \"unchanged\"\n           }\n           ]\n         }\n       },\n       \"Cisco3745new-1.SAMPLE.COM_192.168.0.120\": {\n         \"status\": \"absent\"\n       },\n       \"Cisco3640new-1.SAMPLE.COM_192.168.0.180\": {\n         \"status\": \"absent\"\n       },\n       \"Huawei1421_192.168.0.120\": {\n         \"status\": \"new\"\n       }\n     },\n     \"info\": {\n       \"id\": \"Dailysync0d464eb75582c5da0f7b3285d460557dd3d2843a\",\n       \"endTimestamp\": 1534685151333\n     }\n   }\n }\n};\n\nexport default config;","import React from 'react';\nimport { Grid } from 'semantic-ui-react';\nimport LeftTree from './LeftTree';\nimport RightTree from './RightTree';\nimport config from '../config';\n\nclass DiffViewer extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tjsonData: config.jsonData,\n      active: {}\n\t\t}\n\t}\n\n\thandleClick = (node, subnode, grandnode) => event => {\n    const newActive = this.state.active;\n    if (!newActive[node]) {\n      newActive[node] = {};\n    }\n\n    if (grandnode) {\n      if (!newActive[node][subnode][grandnode]) {\n        newActive[node][subnode][grandnode] = {}\n      }\n      newActive[node][subnode][grandnode].active = !newActive[node][subnode][grandnode].active;\n    } else if (subnode) {\n      if (!newActive[node][subnode]) {\n        newActive[node][subnode] = {};\n      }\n      newActive[node][subnode].active = !newActive[node][subnode].active\n    } else if (node) {\n      newActive[node].active = !newActive[node].active;\n    }\n\n    this.setState((oldState) => ({\n      ...oldState,\n      active: newActive\n    }))\n  }\n\n  render() {\n  \tconst { jsonData, active } = this.state;\n\n  \treturn (\n  \t\t<Grid columns={2} centered>\n        <Grid.Row>\n          <Grid.Column width={8}>\n          \t<LeftTree\n          \t\tleft={jsonData.left}\n              right={jsonData.right}\n          \t\tactive={active}\n          \t\thandleClick={this.handleClick}\n          \t/>\n          </Grid.Column>\n          <Grid.Column width={8}>\n          \t<RightTree\n          \t\tright={jsonData.right}\n          \t\tactive={active}\n          \t\thandleClick={this.handleClick}\n          \t/>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n  \t);\n  }\n}\n\nexport default DiffViewer;","import React, { Component } from 'react';\nimport { Container } from 'semantic-ui-react';\nimport DiffViewer from './components/DiffViewer';\nimport classes from './styles';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Container style={classes.root}>\n          <DiffViewer />\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}